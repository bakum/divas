package ua.divas.view;

import oracle.jbo.Row;
import oracle.jbo.Variable;
import oracle.jbo.common.VariableImpl;
import oracle.jbo.server.ViewObjectImpl;

import oracle.jbo.server.ViewRowSetImpl;

import ua.divas.classes.DivasView;
import ua.divas.view.common.RkoView;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 15 16:14:32 EEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RkoViewImpl extends DivasView implements RkoView {
    /**
     * This is the default constructor (do not remove).
     */
    public RkoViewImpl() {
    }
    
    public String getOperationName(String Id) {
        String _id = (String) callStoredFunction(VARCHAR2, "RKO_ENTRY.get_operationname(?)", new Object[] { Id });
        if (_id.equals("none"))
            return null;
        else
            return _id;
    }
    
    private ViewRowSetImpl getSettingsRowSet() {
        VariableImpl z = new VariableImpl();
        z.setName("UserKey");
        ViewObjectImpl vo = (ViewObjectImpl) this.getRootApplicationModule().findViewObject("UserSettingsView1");
        ViewRowSetImpl rs =
            (ViewRowSetImpl) vo.findByViewCriteriaWithBindVars(vo.getViewCriteria("FilterSettingsByUser"), -1,
                                                               vo.QUERY_MODE_SCAN_DATABASE_TABLES, new Variable[] { z }, new Object[] {
                                                               this.getSessionUserId() });
        return rs;
    }

    public String retrieveCurrencyId() {
        ViewRowSetImpl rs = this.getSettingsRowSet();
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("CurrencyId");
            return rv;
        }
        return null;
    }
    
    public String retrieveDivisionId() {
        ViewRowSetImpl rs = this.getSettingsRowSet();
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("DivisionId");
            return rv;
        }
        return null;
    }
    
    public String retrieveKassaId() {
        ViewRowSetImpl rs = this.getSettingsRowSet();
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("KassaId");
            return rv;
        }
        return null;
    }
    
    public String retrieveActivitiesId() {
        ViewRowSetImpl rs = this.getSettingsRowSet();
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("ActivitiesId");
            return rv;
        }
        return null;
    }
    
    public String retrieveOperationId() {
        ViewObjectImpl vo = (ViewObjectImpl) this.getRootApplicationModule().findViewObject("OperationRkoView1");
        ViewRowSetImpl rs =
            (ViewRowSetImpl) vo.findByViewCriteria(vo.getViewCriteria("OperationRkoToSupplier"),
                                                   -1, vo.QUERY_MODE_SCAN_DATABASE_TABLES);
        Row row = rs.first();
        if (row != null) {
            String rv = (String) row.getAttribute("Id");
            return rv;
        }
        return null;
    }
    
    public void addEntry(String _id) {
        callStoredProcedure("RKO_ENTRY.rko_move_plan_acc(?)", new Object[] { _id });
    }
    
    public void removeEntry(String _id) {
        callStoredProcedure("RKO_ENTRY.rko_remove_plan_acc(?)", new Object[] { _id });
    }

    /**
     * Returns the bind variable value for u_name.
     * @return bind variable value for u_name
     */
    public String getu_name() {
        return (String) getNamedWhereClauseParam("u_name");
    }

    /**
     * Sets <code>value</code> for bind variable u_name.
     * @param value value to bind as u_name
     */
    public void setu_name(String value) {
        setNamedWhereClauseParam("u_name", value);
    }
}

